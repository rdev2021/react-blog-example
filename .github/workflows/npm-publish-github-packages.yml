# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main
      - dev
env:
  NODE_VERSION: '20.x' 

permissions:
  contents: write   # This is required to create/push the new git tag 
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install --force
        npm run build --if-present
        npm run test --if-present

  release:
    needs: build
    runs-on: ubuntu-latest        
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'
          
      - name: Fetch all history for all tags and branches
        run: git fetch --prune

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'
      
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.0.0

      - run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"

      - name: Tag Release
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const tagName = '${{ steps.gitversion.outputs.majorMinorPatch }}';
            const commitSha = process.env.GITHUB_SHA;
            const { owner, repo } = context.repo;
            console.log(`Creating new tag: ${tagName}...`);
            const tag = await github.rest.git.createRef({
              owner: owner,
              repo: repo,
              ref: `refs/tags/${tagName}`,
              sha: commitSha,
            });
            console.log(`Created new tag: ${tagName}`);
